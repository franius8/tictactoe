{"version":3,"file":"./dist/bundle.js","mappings":"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","sources":["webpack:///./src/index.ts"],"sourcesContent":["var player = function (name, marker) {\n    var selectField = function (field) {\n        var index = field.getAttribute('index');\n        if (gameBoard.getBoard()[index] === null) {\n            gameBoard.addMarker(index, marker);\n            placeMarker(field);\n            return true;\n        }\n        displayController.displayTakenMessage();\n    };\n    var placeMarker = function (field) {\n        var markerDiv = document.createElement('div');\n        markerDiv.classList.add(marker);\n        field.appendChild(markerDiv);\n    };\n    return { name: name, marker: marker, selectField: selectField };\n};\nvar game = (function () {\n    var i = 0;\n    var currentPlayer = null;\n    var playerAry = null;\n    var round = 1;\n    var difficulty = null;\n    var initializeGame = function (player1name, player2name) {\n        playerAry = [player(player1name, 'x'), player(player2name, 'o')];\n        displayController.displayBoard(gameBoard.getBoard());\n        displayController.addDisplayDivs();\n        playGame();\n    };\n    var playGame = function () {\n        currentPlayer = playerAry[0];\n        displayController.displayCurrentPlayer(currentPlayer);\n        var fields = document.querySelectorAll('.field');\n        fields.forEach(function (field) {\n            field.addEventListener('click', function () { handleFieldSelection(field); });\n        });\n    };\n    var handleFieldSelection = function (field) {\n        var isFinished = currentPlayer.selectField(field);\n        if (isFinished === true) {\n            if (gameBoard.isWon() === true) {\n                finishGame(false);\n                return;\n            }\n            if (round === 9) {\n                finishGame(true);\n                return;\n            }\n            round += 1;\n            changeCurrentPlayer();\n        }\n    };\n    var initializePvCGame = function (playerName, difficultyLevel) {\n        playerAry = [player(playerName, 'x'), computer];\n        difficulty = difficultyLevel;\n        displayController.displayBoard(gameBoard.getBoard());\n        displayController.addDisplayDivs();\n        playPvCGame();\n    };\n    var playPvCGame = function () {\n        currentPlayer = playerAry[0];\n        displayController.displayCurrentPlayer(currentPlayer);\n        var fields = document.querySelectorAll('.field');\n        fields.forEach(function (field) {\n            field.addEventListener('click', function () { handleFieldSelection(field); });\n        });\n    };\n    var computerSelection = function () {\n        computer.selectField(difficulty);\n        if (gameBoard.isWon() === true) {\n            finishGame(false);\n        }\n        round += 1;\n        changeCurrentPlayer();\n    };\n    var changeCurrentPlayer = function () {\n        i = Math.abs(i - 1);\n        currentPlayer = playerAry[i];\n        displayController.displayCurrentPlayer(currentPlayer);\n        if (currentPlayer === computer) {\n            setTimeout(function () { computerSelection(); }, 1000);\n        }\n    };\n    var getCurrentPlayerMarker = function () { return currentPlayer.marker; };\n    var finishGame = function (tie) {\n        if (tie) {\n            displayController.displayTieMessage();\n        }\n        else {\n            displayController.displayWinner(currentPlayer.name);\n        }\n        var fields = document.querySelectorAll('.field');\n        fields.forEach(function (field) {\n            var newField = field.cloneNode(true);\n            field.parentNode.replaceChild(newField, field);\n        });\n        displayController.displayResetButton();\n    };\n    var resetGame = function () {\n        i = 0;\n        currentPlayer = null;\n        playerAry = null;\n        round = 1;\n        gameBoard.resetBoard();\n        displayController.hideBoard();\n        displayController.displayInitialButtons();\n    };\n    return {\n        initializeGame: initializeGame,\n        initializePvCGame: initializePvCGame,\n        getCurrentPlayerMarker: getCurrentPlayerMarker,\n        resetGame: resetGame,\n    };\n})();\nvar computer = (function () {\n    var name = 'computer';\n    var marker = 'o';\n    var center = 5;\n    var corners = [1, 3, 7, 9];\n    var sides = [2, 4, 6, 8];\n    var winningMoveIndex = null;\n    var blockMoveIndex = null;\n    var selectField = function (difficulty) {\n        switch (difficulty) {\n            case 'easy':\n                easyFieldSelection();\n                break;\n            case 'standard':\n                standardFieldSelection();\n                break;\n            default:\n                break;\n        }\n    };\n    var easyFieldSelection = function () {\n        var finished = false;\n        while (finished === false) {\n            var index = Math.floor(Math.random() * 9.99);\n            if (index !== 0 && gameBoard.getBoard()[index] === null) {\n                placeMarker(index);\n                finished = true;\n            }\n        }\n    };\n    var standardFieldSelection = function () {\n        if (checkWinningMoves()) {\n            placeMarker(winningMoveIndex);\n        }\n        else if (checkBlocks()) {\n            placeMarker(blockMoveIndex);\n        }\n        else if (gameBoard.getBoard()[center] === null) {\n            placeMarker(center);\n        }\n        else {\n            easyFieldSelection();\n        }\n    };\n    var checkWinningMoves = function () {\n        var winningIndex = null;\n        gameBoard.winningCombinations.forEach(function (line) {\n            var computerMarkers = 0;\n            var nullMarkers = 0;\n            var nullIndex = null;\n            line.forEach(function (field) {\n                switch (gameBoard.getBoard()[field]) {\n                    case 'o':\n                        computerMarkers += 1;\n                        break;\n                    case null:\n                        nullMarkers += 1;\n                        nullIndex = field;\n                        break;\n                    default:\n                        break;\n                }\n            });\n            if (computerMarkers === 2 && nullMarkers === 1) {\n                winningIndex = nullIndex;\n            }\n        });\n        if (winningIndex !== null) {\n            winningMoveIndex = winningIndex;\n            return true;\n        }\n        return false;\n    };\n    var checkBlocks = function () {\n        var blockIndex = null;\n        gameBoard.winningCombinations.forEach(function (line) {\n            var playerMarkers = 0;\n            var nullMarkers = 0;\n            var nullIndex = null;\n            line.forEach(function (field) {\n                switch (gameBoard.getBoard()[field]) {\n                    case 'x':\n                        playerMarkers += 1;\n                        break;\n                    case null:\n                        nullMarkers += 1;\n                        nullIndex = field;\n                        break;\n                }\n            });\n            if (playerMarkers === 2 && nullMarkers === 1) {\n                blockIndex = nullIndex;\n            }\n        });\n        if (blockIndex !== null) {\n            blockMoveIndex = blockIndex;\n            return true;\n        }\n        return false;\n    };\n    var placeMarker = function (index) {\n        var field = document.querySelector(\"[index=\\\"\".concat(index, \"\\\"]\"));\n        gameBoard.addMarker(index, 'o');\n        var markerDiv = document.createElement('div');\n        markerDiv.classList.add('o');\n        field.appendChild(markerDiv);\n    };\n    return { name: name, marker: marker, selectField: selectField };\n})();\nvar gameBoard = (function () {\n    var board = new Array(10).fill(null); // For simplicity 0 is not used\n    var winningCombinations = [[1, 2, 3], [4, 5, 6], [7, 8, 9], [1, 4, 7], [2, 5, 8], [3, 6, 9], [1, 5, 9], [3, 5, 7]];\n    var addMarker = function (index, type) { return board[index] = type; };\n    var isWon = function () { return winningCombinations.some(isPresent); };\n    var isPresent = function (line) { return line.every(isPlayerMarker); };\n    var isPlayerMarker = function (field) { return board[field] === game.getCurrentPlayerMarker(); };\n    var resetBoard = function () { board = new Array(10).fill(null); };\n    var getBoard = function () { return board; };\n    return {\n        winningCombinations: winningCombinations,\n        getBoard: getBoard,\n        addMarker: addMarker,\n        isWon: isWon,\n        isPresent: isPresent,\n        resetBoard: resetBoard,\n    };\n})();\nvar displayController = (function () {\n    var display = document.getElementById('display');\n    var boardDiv = document.getElementById('board');\n    var content = document.getElementById('content');\n    var displayInitialButtons = function () {\n        clearDisplay();\n        var computerButton = document.createElement('button');\n        var middleDiv = document.createElement('div');\n        var playerButtton = document.createElement('button');\n        computerButton.textContent = 'Player vs Computer';\n        middleDiv.textContent = 'or';\n        playerButtton.textContent = 'Player vs Player';\n        display.appendChild(computerButton);\n        display.appendChild(middleDiv);\n        display.appendChild(playerButtton);\n        computerButton.addEventListener('click', function () { buildFormPvC(); });\n        playerButtton.addEventListener('click', function () { buildFormPvP(); });\n    };\n    var buildFormPvC = function () {\n        clearDisplay();\n        var returnButton = document.createElement('button');\n        returnButton.textContent = '\\u2190 Return';\n        var form = document.createElement('form');\n        form.setAttribute('id', 'form');\n        var player1Label = document.createElement('label');\n        player1Label.setAttribute('for', 'player1name');\n        player1Label.textContent = \"First player's name:\";\n        var player1Input = document.createElement('input');\n        player1Input.setAttribute('id', 'player1name');\n        player1Input.setAttribute('type', 'text');\n        player1Input.setAttribute('required', 'true');\n        var difficultyLabel = document.createElement('label');\n        difficultyLabel.setAttribute('for', 'radiocontainer');\n        difficultyLabel.textContent = 'Select difficulty:';\n        var radioContainer = document.createElement('div');\n        radioContainer.setAttribute('id', 'radiocontainer');\n        var difficultyLevelEasyLabel = document.createElement('label');\n        difficultyLevelEasyLabel.setAttribute('for', 'difficultyleveleasy');\n        difficultyLevelEasyLabel.textContent = 'Easy';\n        var difficultyLevelEasy = document.createElement('input');\n        difficultyLevelEasy.setAttribute('id', 'difficultyleveleasy');\n        difficultyLevelEasy.setAttribute('type', 'radio');\n        difficultyLevelEasy.setAttribute('value', 'easy');\n        difficultyLevelEasy.setAttribute('required', 'true');\n        difficultyLevelEasy.setAttribute('name', 'difficulty');\n        var difficultyLevelStandardLabel = document.createElement('label');\n        difficultyLevelStandardLabel.setAttribute('for', 'difficultylevelstandard');\n        difficultyLevelStandardLabel.textContent = 'Standard';\n        var difficultyLevelStandard = document.createElement('input');\n        difficultyLevelStandard.setAttribute('id', 'difficultylevelstandard');\n        difficultyLevelStandard.setAttribute('type', 'radio');\n        difficultyLevelStandard.setAttribute('value', 'standard');\n        difficultyLevelStandard.setAttribute('required', 'true');\n        difficultyLevelStandard.setAttribute('name', 'difficulty');\n        var submitButton = document.createElement('button');\n        submitButton.setAttribute('type', 'submit');\n        submitButton.textContent = 'New game';\n        radioContainer.appendChild(difficultyLevelEasy);\n        radioContainer.appendChild(difficultyLevelEasyLabel);\n        radioContainer.appendChild(difficultyLevelStandard);\n        radioContainer.appendChild(difficultyLevelStandardLabel);\n        form.appendChild(returnButton);\n        form.appendChild(player1Label);\n        form.appendChild(player1Input);\n        form.appendChild(difficultyLabel);\n        form.appendChild(radioContainer);\n        form.appendChild(submitButton);\n        display.appendChild(form);\n        returnButton.addEventListener('click', function () { displayInitialButtons(); });\n        form.addEventListener('submit', function (e) {\n            e.preventDefault();\n            var player1name = document.getElementById('player1name').value;\n            var difficultyLevel = document.querySelector('input[name=\"difficulty\"]:checked').value;\n            var target = e.target;\n            target.reset();\n            form.remove();\n            game.initializePvCGame(player1name, difficultyLevel);\n        });\n    };\n    var buildFormPvP = function () {\n        clearDisplay();\n        var returnButton = document.createElement('button');\n        returnButton.textContent = '\\u2190 Return';\n        var form = document.createElement('form');\n        form.setAttribute('id', 'form');\n        var player1Label = document.createElement('label');\n        player1Label.setAttribute('for', 'player1name');\n        player1Label.textContent = \"First player's name:\";\n        var player1Input = document.createElement('input');\n        player1Input.setAttribute('id', 'player1name');\n        player1Input.setAttribute('type', 'text');\n        player1Input.setAttribute('required', 'true');\n        var player2Label = document.createElement('label');\n        player2Label.setAttribute('for', 'player2name');\n        player2Label.textContent = \"Second player's name:\";\n        var player2Input = document.createElement('input');\n        player2Input.setAttribute('id', 'player2name');\n        player2Input.setAttribute('type', 'text');\n        player2Input.setAttribute('required', 'true');\n        var submitButton = document.createElement('button');\n        submitButton.setAttribute('type', 'submit');\n        submitButton.textContent = 'New game';\n        form.appendChild(returnButton);\n        form.appendChild(player1Label);\n        form.appendChild(player1Input);\n        form.appendChild(player2Label);\n        form.appendChild(player2Input);\n        form.appendChild(submitButton);\n        display.appendChild(form);\n        returnButton.addEventListener('click', function () { displayInitialButtons(); });\n        form.addEventListener('submit', function (e) {\n            e.preventDefault();\n            var player1name = document.getElementById('player1name').value;\n            var player2name = document.getElementById('player2name').value;\n            var target = e.target;\n            target.reset();\n            form.remove();\n            game.initializeGame(player1name, player2name);\n        });\n    };\n    var displayBoard = function (board) {\n        content.style.display = 'grid';\n        board.forEach(function (field, index) {\n            var fieldDiv = document.createElement('div');\n            fieldDiv.classList.add('field');\n            fieldDiv.setAttribute('index', index);\n            if (index === 0) {\n                return;\n            }\n            if (field === 'x') {\n                var divX = document.createElement('div');\n                divX.classList.add('x');\n                fieldDiv.appendChild(divX);\n            }\n            else if (field === 'o') {\n                var divO = document.createElement('div');\n                divO.classList.add('o');\n                fieldDiv.appendChild(divO);\n            }\n            boardDiv.appendChild(fieldDiv);\n        });\n        boardDiv.style.display = 'grid';\n    };\n    var hideBoard = function () {\n        content.style.display = 'flex';\n        boardDiv.textContent = '';\n        boardDiv.style.display = 'none';\n    };\n    var addDisplayDivs = function () {\n        var errorDiv = document.createElement('div');\n        errorDiv.setAttribute('id', 'errordiv');\n        var currentPlayerDiv = document.createElement('div');\n        currentPlayerDiv.setAttribute('id', 'currentplayerdiv');\n        var currentPlayerLabel = document.createElement('div');\n        currentPlayerLabel.setAttribute('id', 'currentplayerlabel');\n        currentPlayerLabel.textContent = 'Current player:';\n        var markerDiv = document.createElement('div');\n        markerDiv.setAttribute('id', 'markerdiv');\n        display.appendChild(errorDiv);\n        display.appendChild(currentPlayerLabel);\n        display.appendChild(currentPlayerDiv);\n        display.appendChild(markerDiv);\n        displayResetButton();\n    };\n    var displayCurrentPlayer = function (currentPlayer) {\n        var currentPlayerDiv = document.getElementById('currentplayerdiv');\n        currentPlayerDiv.textContent = currentPlayer.name;\n        displayMarker(currentPlayer);\n        clearErrorMessage();\n    };\n    var displayTakenMessage = function () {\n        var errorDiv = document.getElementById('errordiv');\n        errorDiv.textContent = 'Space already taken';\n        errorDiv.style.visibility = 'visible';\n    };\n    var displayMarker = function (currentPlayer) {\n        var markerDiv = document.getElementById('markerdiv');\n        var markerElement = document.createElement('div');\n        markerDiv.innerHTML = '';\n        markerElement.classList.add(currentPlayer.marker);\n        markerDiv.appendChild(markerElement);\n    };\n    var clearErrorMessage = function () {\n        var errorDiv = document.getElementById('errordiv');\n        errorDiv.textContent = '';\n        errorDiv.style.visibility = 'collapse';\n    };\n    var clearDisplay = function () {\n        display.textContent = '';\n    };\n    var displayWinner = function (name) {\n        clearDisplay();\n        var winnerDiv = document.createElement('div');\n        winnerDiv.textContent = \"\".concat(name, \" won!\");\n        winnerDiv.classList.add('winnerdiv');\n        display.appendChild(winnerDiv);\n    };\n    var displayTieMessage = function () {\n        clearDisplay();\n        var tieDiv = document.createElement('div');\n        tieDiv.textContent = 'Tie';\n        tieDiv.classList.add('winnerdiv');\n        display.appendChild(tieDiv);\n    };\n    var displayResetButton = function () {\n        var resetButton = document.createElement('button');\n        resetButton.setAttribute('id', 'resetbutton');\n        resetButton.textContent = 'New game';\n        display.appendChild(resetButton);\n        resetButton.addEventListener('click', function () { game.resetGame(); });\n    };\n    return {\n        displayBoard: displayBoard,\n        displayCurrentPlayer: displayCurrentPlayer,\n        displayTakenMessage: displayTakenMessage,\n        addDisplayDivs: addDisplayDivs,\n        displayWinner: displayWinner,\n        displayResetButton: displayResetButton,\n        hideBoard: hideBoard,\n        displayTieMessage: displayTieMessage,\n        displayInitialButtons: displayInitialButtons,\n    };\n})();\ndisplayController.displayInitialButtons();\n"],"names":["i","currentPlayer","playerAry","round","difficulty","playGame","handleFieldSelection","playPvCGame","changeCurrentPlayer","finishGame","winningMoveIndex","blockMoveIndex","easyFieldSelection","standardFieldSelection","checkWinningMoves","checkBlocks","placeMarker","board","winningCombinations","isPresent","isPlayerMarker","display","boardDiv","content","displayInitialButtons","buildFormPvC","buildFormPvP","displayMarker","clearErrorMessage","clearDisplay","displayResetButton","player","name","marker","selectField","field","index","getAttribute","gameBoard","getBoard","addMarker","markerDiv","document","createElement","classList","add","appendChild","displayController","displayTakenMessage","game","displayCurrentPlayer","querySelectorAll","forEach","addEventListener","isWon","Math","abs","computer","setTimeout","tie","displayTieMessage","displayWinner","newField","cloneNode","parentNode","replaceChild","initializeGame","player1name","player2name","displayBoard","addDisplayDivs","initializePvCGame","playerName","difficultyLevel","getCurrentPlayerMarker","resetGame","resetBoard","hideBoard","finished","floor","random","winningIndex","line","computerMarkers","nullMarkers","nullIndex","blockIndex","playerMarkers","querySelector","concat","Array","fill","every","type","some","getElementById","computerButton","middleDiv","playerButtton","textContent","returnButton","form","setAttribute","player1Label","player1Input","difficultyLabel","radioContainer","difficultyLevelEasyLabel","difficultyLevelEasy","difficultyLevelStandardLabel","difficultyLevelStandard","submitButton","e","preventDefault","value","target","reset","remove","player2Label","player2Input","markerElement","innerHTML","errorDiv","style","visibility","fieldDiv","divX","divO","currentPlayerDiv","currentPlayerLabel","winnerDiv","resetButton","tieDiv"],"sourceRoot":""}